package servidorDeAlertas.servidor;

import servidorDeAlertas.sop_corba.*;
import servidorDeNotificaciones.sop_corba.*;
import servidorDeNotificaciones.sop_corba.GestionNotificacionesPackage.*;
import org.omg.CosNaming.NamingContextPackage.*;
import org.omg.CosNaming.*;
import servidorDeAlertas.sop_corba.GestionPacientesPackage.*;
/**
* sop_corba/GesAnteproyectosOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ges_ant.idl
* martes 9 de julio de 2019 06:45:59 AM COT
*/

public class GesPacientesImpl implements GestionPacientesOperations {
  int posPaciente;
  pacienteDTO[] pacientes;
  GestionNotificaciones ref;
  
  public GesPacientesImpl(){
    posPaciente=0;
    pacientes=new pacienteDTO[4];
    ref=null;
  }
  
  
 public void registrarPaciente (servidorDeAlertas.sop_corba.GestionPacientesPackage.pacienteDTO pac_reg, org.omg.CORBA.BooleanHolder res){
 
	  boolean resultado;
     
      System.out.println("En registrarPaciente() posPaciente:"+posPaciente);
      if(posPaciente==0){
        pacientes[posPaciente]=pac_reg;
        resultado =true;
		posPaciente++;
		System.out.println("\n --------Registrando Paciente\n");
	  }
      else   
	  if ((posPaciente<=4)&&(this.consultarVector(pac_reg.numeroHabitacion)==-1)){
		pacientes[posPaciente]=pac_reg;
		resultado =true;
		posPaciente++;
		System.out.println("\n --------Registrando Paciente\n");
	}
	else {
		System.out.println("\n --------Cantidad maxima de registros alcanzada\n");
		resultado=false;
	}	
	    ClsMensajeNotificacionDTO mndto= new ClsMensajeNotificacionDTO();
	    mndto.nombre=pac_reg.nombre;
	    mndto.apellido=pac_reg.apellido;
	    mndto.numeroHabitacion=pac_reg.numeroHabitacion;
	    mndto.estado=1;    
	    if(resultado==false){
		  mndto.estado=0;
		}
		
		System.out.println("registrarPaciente(): notificando...rr="+ref);
		
		ref.notificarRegistro(mndto);
	    
        res.value=resultado;
  }

public boolean buscarPaciente (int numeroHabitacion, servidorDeAlertas.sop_corba.GestionPacientesPackage.pacienteDTOHolder pac_bus){  
  
	  boolean resultado=false;
	  int res;
	  System.out.println("Identificador: "+numeroHabitacion+" a buscar...");
	  res=consultarVector(numeroHabitacion);
	  System.out.println("res: "+res+" encontrado...");
		if (res!=-1){
			pac_bus.value = pacientes[res];//runtina de busqueda
			resultado=true;
		}else{
			pac_bus.value = new pacienteDTO(" "," ",-1,-1);
		}
     	

	return resultado;
  }
  
  int consultarVector( int numeroHabitacion){
	int resultado=-1;
	int i ;
	
	System.out.println("En consultarVector(): buscando: "+numeroHabitacion);
	System.out.println("posPaciente: "+posPaciente);
	
	for (i=0 ;  i<posPaciente ; i++){
		System.out.println("Valor i="+i);
		if (pacientes[i].numeroHabitacion==numeroHabitacion){
			resultado=i;
			break;
		}	
	}
	return resultado;
    }
    
public void consultarReferenciaRemota(NamingContextExt nce, String servicio){
  	//GestionNotificaciones ref;
  	try{
  	this.ref = GestionNotificacionesHelper.narrow(nce.resolve_str(servicio));
  	System.out.println("Obtenido el manejador sobre el servidor de objetos: " + ref);
    }catch(Exception ex){
	   System.out.println("Error: "+ex.getMessage());
	}  	
}    
} 
